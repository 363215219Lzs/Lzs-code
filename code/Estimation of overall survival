
// 13. the time chain data of overall survival pfs/pd-d in realworld analysis<p>
cl <- makeCluster(8-1) 
registerDoParallel(cl)
C_11<-list()
for(kk in 1:(K+1)){#(K+1)
  x<-ifelse(kk<=K,1,0)
data<-data_tran[[kk]]
c_1<-foreach(i = 1:n,
               .combine = rbind,
             .packages = c("dplyr"),
               .errorhandling = "pass") %dopar% {
                 c<-c(rep(0, 6))
                 Time<-c(rep(1, K))
                 s<-c(rep(0, K))
  d<-data[i,]
  sit<-min(which(is.na(d)==FALSE))#if have NA
for(t in sit:(K-1)){
  #survival time t
  Time[t+1]<-ifelse(d[t]==d[t+1],Time[t]+1,1)
  #state transition m
  if ((d[t]==1)&(d[t+1]==2)) {s[t]<-1}
  else if ((d[t]==2)&(d[t+1]==1)) {s[t]<-2}
  else if ((d[t]==1)&(d[t+1]==3)) {s[t]<-3} 
  else if ((d[t]==2)&(d[t+1]==3)) {s[t]<-4}
  else s[t]<-0
  }
  Time<-Time[sit:(K-1)]
  s<-s[sit:(K-1)]


 #chain data
if (any(s!= 0)==TRUE) {#transfer has occurred
    if(last(Time)==1){# Transfer occurred at the last time point
  for(l in 1:(sum(s!= 0))){#sum(s! = 0) denote the number of transitions occurred
    ci<-c(ID=i,y=Time[which(s!= 0)][l],m=s[which(s!= 0)][l],"k"=which(s!= 0)[l],X=x,sigema=1)
    ci<-as.data.frame(t(ci))
    colnames(ci)<-c("ID","y","m","k","X","sigema")
    c<-rbind(c,ci)
  }
    }
    if(last(Time)>1){# No transfer occurred at the last point in time
     for(l in 1:(sum(s!= 0))){
   ci1<-c(ID=i,y=Time[which(s!= 0)][l],m=s[which(s!= 0)][l],"k"=which(s!= 0)[l],X=x,sigema=1)
   ci1<-as.data.frame(t(ci1))
    colnames(ci1)<-c("ID","y","m","k","X","sigema")
   c<-rbind(c,ci1)
     }


    if(last(d)==1|last(d)==2){## The last status is not dead, indicating that there is censoring data
   ci2<-c(ID=i,y=last(Time)-1,m=last(d),"k"=k-sit,X=x,sigema=0)
   ci3<-c(ID=i,y=last(Time)-1,m=last(d)+2,"k"=k-sit,X=x,sigema=0)
   #m=1 in the last time correspond the censoring data of m=1/m=3;m=2 in the last time correspond the censoring data of m=2/m=4 
   ci2<-as.data.frame(t(ci2))
   ci3<-as.data.frame(t(ci3))
    colnames(ci2)<-c("ID","y","m","k","X","sigema")
    colnames(ci3)<-c("ID","y","m","k","X","sigema")
    c<-rbind(c,ci2,ci3)
  }
      if(last(d)==3){
  c<-c
     }
    }
     }#If last(time) is greater than 1 and is not in state 3, then the survival time of the individual in state 1/2 is the censoring data and the survival time is last(time)-1
 

if (any(s!= 0)==FALSE) {
  ci<-c(ID=i,y=last(Time)-1,m=last(d),"k"=k-sit,X=x,sigema=0)
  ci<-as.data.frame(t(ci))
    colnames(ci)<-c("ID","y","m","k","X","sigema")
    c<-as.data.frame(rbind(c,ci))
   }

                 return(c)
               }
C_1<-as.data.frame(c_1[which(!c_1$ID==0),])
C_1$y<-ifelse(C_1$y<=56,(C_1$y)/7,(C_1$y)-56+8)
summary(C_1$y)

# m=1 means pfs-pd
C_11[[kk]]<-C_1[which(C_1$m==1),]
}
stopCluster(cl)


#m=2 means overall survival of pfs/pd-d，including pfs-pd-d，pfs-d，pd-d，pd-pfs-d
cl <- makeCluster(8-1) 
registerDoParallel(cl)
C_22<-list()
for(kk in 1:(K+1)){#(K+1)
  x<-ifelse(kk<=K,1,0)
data<-data_tran[[kk]]
c_2<-foreach(i = 1:num,
               .combine = rbind,
             .packages = c("dplyr"),
               .errorhandling = "pass") %dopar% {
                 ci<-c(rep(NA, 6))
                 Time<-c(rep(1, k))
                 s<-c(rep(0, k))
                 d<-dat_flw[i,]
                 x<-dat_x[i,]
                 sit<-min(which(is.na(d)==FALSE))
 for(t in sit:(k-1)){
  Time[t+1]<-ifelse(d[t]==d[t+1],Time[t]+1,1)
 }
  Time<-Time[sit:k]
  x<-x[sit:k]              
 if(last(d)==1|last(d)==2){
  ci<-c(i,k-sit,2,k-sit,last(x),0)
 }
  if(last(d)==3){ 
   if(d[sit]==1|d[sit]==2){
ci<-c(i,min(which(d==3))-sit,2,min(which(d==3))-sit,as.numeric(x[min(which(d==3))-sit]),1)
   }
   if(d[sit]==3){ 
   ci<-NA  
   }
  }
  return(ci)
               }

C_2<-as.data.frame(c_2[which(!c_2$ID==0),])
C_2$y<-ifelse(C_2$y<=56,(C_2$y)/7,(C_2$y)-56+8)
summary(C_2$y)
C_22[[kk]]<-C_2
}
stopCluster(cl)


C<-list()
for(kk in 1:(K+1)){
  C[[kk]]<-rbind(C_11[[kk]],C_22[[kk]])
}
write.csv(C,"~/Desktop/realworld/C_sample_m2.csv")
#include the chain data of 2 transition paths:pfs-pd,pfs/pd-d(overall survival)

</body>
